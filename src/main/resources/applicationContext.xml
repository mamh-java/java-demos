<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:db.prop"/>
    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.mamh.spring.demo.dao"/>


    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="initialPoolSize" value="${jdbc.initPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

    <!--配置hibernate的sessionfactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!--这个配置文件是可以不要的。使用hibernateProperties 来配置属性 -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <!-- 建议保留hibernate.cfg.xml 配置文件-->

        <!-- -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--<property name="dialect">org.hibernate.dialect.MySQLInnoDBDialect</property>-->

                <!--是否打印sql语句-->
                <prop key="hibernate.show_sql">true</prop>

                <!--是否对sql语句格式化-->
                <prop key="hibernate.format_sql">true</prop>

                <!--指定自动生成数据库表的策略，有4个值-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>

        </property>

        <property name="mappingLocations" value="classpath:com/mamh/spring/demo/beans/*.hbm.xml"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="interceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/><!-- get开头的方法配置个read only-->
            <tx:method name="purchase" propagation="REQUIRES_NEW"/> <!-- 这里设置事务的传播行为-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="pointcut"
                      expression="execution(* com.mamh.spring.demo.dao.*.*(..))"/><!-- 注意这里是.*.* 包下的所有类。类里面的所有方法 -->
        <aop:advisor advice-ref="interceptor" pointcut-ref="pointcut"/>
    </aop:config>


    <bean id="helloworld" class="com.mamh.spring.demo.beans.HelloWorld">
        <property name="name" value="sdflajldfkjaldkfjadsf"/>
    </bean>
    <bean id="person" class="com.mamh.spring.demo.beans.Person">
        <property name="name" value="spring xxx"/>
    </bean>


    <!-- spring 整合struts2  是IOC容器来管理struts2的Action -->



</beans>
